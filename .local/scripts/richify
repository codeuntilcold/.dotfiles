#!/usr/bin/env python3

import sys
import re

ESC = "\033["  # real ESC
RESET = f"{ESC}0m"
HEADR = f"{ESC}96m"  # headings
FENCE = f"{ESC}33m"  # ``` / ~~~ lines
CODE = f"{ESC}92m"  # fenced code content
ICOD = f"{ESC}95m"  # inline `code`
THINK = f"{ESC}90m"  # <think>…</think>

fence_re = re.compile(r"^([`]{3,}|[~]{3,})")
head_re = re.compile(r"^(#{1,6})\s+(.+)$")
inline_re = re.compile(r"`([^`\n]+)`")

in_block = False
fence_ch = None
in_think = False

for raw in sys.stdin:
    line = raw.rstrip("\n")

    # fences
    m = fence_re.match(line)
    if m:
        ch = m.group(1)[0]
        if not in_block:
            in_block, fence_ch = True, ch
        elif ch == fence_ch:
            in_block, fence_ch = False, None
        print(f"{FENCE}{line}{RESET}")
        continue

    if in_block:
        print(f"{CODE}{line}{RESET}")
        continue

    # think blocks
    if in_think:
        if "</think>" in line:
            i = line.find("</think>")
            print(f"{THINK}{line[: i + 8]}{RESET}{line[i + 8 :]}")
            in_think = False
        else:
            print(f"{THINK}{line}{RESET}")
        continue

    # single-line <think>…</think> (multiple per line ok)
    line = re.sub(
        r"(<think>.*?</think>)", lambda m: f"{THINK}{m.group(1)}{RESET}", line
    )

    # open <think> (no close on this line)
    if "<think>" in line:
        in_think = True
        print(f"{THINK}{line}{RESET}")
        continue

    # headings
    if head_re.match(line):
        print(f"{HEADR}{line}{RESET}")
        continue

    # inline `code`
    line = inline_re.sub(lambda m: f"{ICOD}`{m.group(1)}`{RESET}", line)
    print(line)
